# This workflow will build a package using Nuget and then publish it to Github and Nuget.org when a release is created

name: Nuget Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
#    - name: Test
#      run: dotnet test --no-restore --verbosity normal
    - name: Pack
      run: dotnet pack --configuration Release --no-restore --include-symbols

    - name: Upload Release Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        tag_name="${GITHUB_REF##*/}"
        hub release edit $(find ./DelveClientSDK/bin/Release -type f -name "DelveClientSDK.*.nupkg" -printf "-a %p ") -m "" "$tag_name"

    - name: Publish Nuget Package to Github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/RelationalAI-oss/index.json -n github -u RelationalAI-oss -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
        dotnet pack --configuration Release --no-restore --include-symbols
        dotnet nuget push $(find ./DelveClientSDK/bin/Release -type f -name "DelveClientSDK.*[0-9].nupkg" -printf "-a %p ") --source "github"
        dotnet nuget push $(find ./DelveClientSDK/bin/Release -type f -name "DelveClientSDK.*.symbols.nupkg" -printf "-a %p ") --source "github"

    # Publish
    - name: Publish Nuget Package to Nuget.org
      id: publish_nuget
      uses: rohith/publish-nuget@v2
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: DelveClientSDK/DelveClientSDK.csproj

        # NuGet package id, used for version detection & defaults to project name
        # PACKAGE_NAME: DelveClientSDK

        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: DelveClientSDK/DelveClientSDK.csproj

        # Regex pattern to extract version info in a capturing group
        # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

        # Flag to toggle git tagging, enabled by default
        TAG_COMMIT: false

        # Format of the git tag, [*] gets replaced with actual version
        # TAG_FORMAT: v*

        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        # NUGET_SOURCE: https://api.nuget.org

        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        INCLUDE_SYMBOLS: true
