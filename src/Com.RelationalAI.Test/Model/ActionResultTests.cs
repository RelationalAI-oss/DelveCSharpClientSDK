/* 
 * Delve Client SDK
 *
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relational.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.RelationalAI.Api;
using Com.RelationalAI.Model;
using Com.RelationalAI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.RelationalAI.Test
{
    /// <summary>
    ///  Class for testing ActionResult
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ActionResultTests
    {
        // TODO uncomment below to declare an instance variable for ActionResult
        //private ActionResult instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ActionResult
            //instance = new ActionResult();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ActionResult
        /// </summary>
        [Test]
        public void ActionResultInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), instance);
        }

        /// <summary>
        /// Test deserialize a CardinalityActionResult from type ActionResult
        /// </summary>
        [Test]
        public void CardinalityActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a CardinalityActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new CardinalityActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ModifyWorkspaceActionResult from type ActionResult
        /// </summary>
        [Test]
        public void ModifyWorkspaceActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a ModifyWorkspaceActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new ModifyWorkspaceActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a CollectProblemsActionResult from type ActionResult
        /// </summary>
        [Test]
        public void CollectProblemsActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a CollectProblemsActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new CollectProblemsActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ParseActionResult from type ActionResult
        /// </summary>
        [Test]
        public void ParseActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a ParseActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new ParseActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a SetOptionsActionResult from type ActionResult
        /// </summary>
        [Test]
        public void SetOptionsActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a SetOptionsActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new SetOptionsActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a InstallActionResult from type ActionResult
        /// </summary>
        [Test]
        public void InstallActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a InstallActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new InstallActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ListSourceActionResult from type ActionResult
        /// </summary>
        [Test]
        public void ListSourceActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a ListSourceActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new ListSourceActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a UpdateActionResult from type ActionResult
        /// </summary>
        [Test]
        public void UpdateActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a UpdateActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new UpdateActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a LoadDataActionResult from type ActionResult
        /// </summary>
        [Test]
        public void LoadDataActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a LoadDataActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new LoadDataActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a QueryActionResult from type ActionResult
        /// </summary>
        [Test]
        public void QueryActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a QueryActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new QueryActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ListEdbActionResult from type ActionResult
        /// </summary>
        [Test]
        public void ListEdbActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a ListEdbActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new ListEdbActionResult().ToJson()));
        }
        /// <summary>
        /// Test deserialize a ImportActionResult from type ActionResult
        /// </summary>
        [Test]
        public void ImportActionResultDeserializeFromActionResultTest()
        {
            // TODO uncomment below to test deserialize a ImportActionResult from type ActionResult
            //Assert.IsInstanceOf(typeof(ActionResult), JsonConvert.DeserializeObject<ActionResult>(new ImportActionResult().ToJson()));
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

    }

}
